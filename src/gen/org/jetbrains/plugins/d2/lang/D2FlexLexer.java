// Generated by JFlex 1.9.1 http://jflex.de/  (tweaked for IntelliJ platform)
// source: D2Lexer.flex

package org.jetbrains.plugins.d2.lang;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;
import com.intellij.openapi.util.text.StringUtilRt;

import static com.intellij.psi.TokenType.BAD_CHARACTER;
import static com.intellij.psi.TokenType.WHITE_SPACE;
import static org.jetbrains.plugins.d2.lang.D2ElementTypes.*;


public class D2FlexLexer implements FlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int LABEL_STATE = 2;
  public static final int PROPERTY_VALUE_BEGIN_STATE = 4;
  public static final int PROPERTY_VALUE_STATE = 6;
  public static final int BLOCK_STRING_LANG_STATE = 8;
  public static final int BLOCK_STRING_BODY_STATE = 10;
  public static final int ARRAY_STATE = 12;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = {
     0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6, 6
  };

  /**
   * Top-level table for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_TOP = zzUnpackcmap_top();

  private static final String ZZ_CMAP_TOP_PACKED_0 =
    "\1\0\25\u0100\1\u0200\11\u0100\1\u0300\17\u0100\1\u0400\247\u0100"+
    "\10\u0500\u1020\u0100";

  private static int [] zzUnpackcmap_top() {
    int [] result = new int[4352];
    int offset = 0;
    offset = zzUnpackcmap_top(ZZ_CMAP_TOP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_top(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Second-level tables for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_BLOCKS = zzUnpackcmap_blocks();

  private static final String ZZ_CMAP_BLOCKS_PACKED_0 =
    "\11\0\1\1\1\2\1\3\1\4\1\5\22\0\1\1"+
    "\1\0\1\6\1\7\1\10\1\0\1\11\1\12\1\10"+
    "\1\0\1\13\2\0\1\14\1\15\1\0\3\16\1\17"+
    "\6\16\1\20\1\21\1\22\1\0\1\23\1\0\1\10"+
    "\6\24\13\25\1\26\10\25\1\27\1\30\1\31\1\0"+
    "\1\32\1\0\1\33\1\34\1\35\1\36\1\37\1\40"+
    "\1\41\1\42\1\43\1\25\1\44\1\45\1\46\1\47"+
    "\1\50\1\51\1\25\1\52\1\53\1\54\1\55\1\56"+
    "\1\57\1\60\1\61\1\62\1\63\1\64\1\65\7\0"+
    "\1\3\32\0\1\66\u01df\0\1\66\177\0\13\66\35\0"+
    "\2\3\5\0\1\66\57\0\1\66\240\0\1\66\377\0"+
    "\u0100\67";

  private static int [] zzUnpackcmap_blocks() {
    int [] result = new int[1536];
    int offset = 0;
    offset = zzUnpackcmap_blocks(ZZ_CMAP_BLOCKS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_blocks(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /**
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\7\0\1\1\1\2\1\3\1\4\1\5\1\3\1\5"+
    "\1\6\1\1\1\7\1\10\2\5\1\11\21\1\1\12"+
    "\1\13\1\14\1\15\1\2\1\16\2\3\1\15\1\17"+
    "\1\20\1\21\1\5\1\15\2\3\1\22\1\23\1\24"+
    "\1\25\1\15\1\26\2\15\1\27\2\30\1\5\1\31"+
    "\1\32\1\15\1\33\4\0\2\3\1\0\1\3\1\34"+
    "\1\35\1\0\1\36\1\37\1\0\36\1\1\13\1\0"+
    "\1\15\2\0\1\3\1\15\1\3\2\2\1\0\1\15"+
    "\3\3\1\15\3\3\2\15\1\2\4\15\1\0\1\2"+
    "\6\0\1\40\3\0\33\1\1\41\4\1\1\0\3\3"+
    "\1\15\1\0\1\15\1\3\1\0\5\3\1\42\1\15"+
    "\2\22\1\15\2\0\2\15\2\0\3\15\6\0\6\1"+
    "\2\36\20\1\1\43\2\1\1\2\2\3\1\0\3\3"+
    "\1\15\2\0\1\2\2\0\2\15\2\0\1\15\1\44"+
    "\1\2\1\0\2\1\1\41\3\1\3\0\7\1\1\45"+
    "\1\1\1\0\3\1\1\46\1\0\2\3\1\46\2\42"+
    "\2\0\1\15\1\47\2\0\1\4\17\1\1\36\4\1"+
    "\1\46\1\3\1\0\3\3\2\0\1\4\1\0\2\1"+
    "\1\0\7\1\2\0\3\1\1\3\1\0\2\46\1\3"+
    "\1\4\15\1\1\46\1\0\2\3\1\46\1\1\1\50"+
    "\10\1\2\0\2\3\10\1\2\46\14\1\1\51";

  private static int [] zzUnpackAction() {
    int [] result = new int[408];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\70\0\160\0\250\0\340\0\u0118\0\u0150\0\u0188"+
    "\0\u01c0\0\u01f8\0\u0230\0\u0268\0\u02a0\0\u02d8\0\u0268\0\u0310"+
    "\0\u0268\0\u0268\0\u0348\0\u0380\0\u0188\0\u03b8\0\u03f0\0\u0428"+
    "\0\u0460\0\u0498\0\u04d0\0\u0508\0\u0540\0\u0578\0\u05b0\0\u05e8"+
    "\0\u0620\0\u0658\0\u0690\0\u06c8\0\u0700\0\u0738\0\u0268\0\u0770"+
    "\0\u0268\0\u07a8\0\u07e0\0\u0818\0\u0850\0\u0888\0\u08c0\0\u0268"+
    "\0\u0268\0\u0268\0\u08f8\0\u0930\0\u0968\0\u09a0\0\u09d8\0\u0930"+
    "\0\u0268\0\u0268\0\u0a10\0\u0268\0\u0a48\0\u0a80\0\u0ab8\0\u0af0"+
    "\0\u0268\0\u0b28\0\u0b60\0\u0268\0\u0b98\0\u0268\0\u0188\0\u0bd0"+
    "\0\u0c08\0\u08f8\0\u0c40\0\u0c78\0\u0cb0\0\u0268\0\u0ce8\0\u0268"+
    "\0\u0d20\0\u0188\0\u0d58\0\u0d90\0\u0dc8\0\u0e00\0\u0e38\0\u0e70"+
    "\0\u0ea8\0\u0ee0\0\u0f18\0\u0f50\0\u0f88\0\u0fc0\0\u0ff8\0\u1030"+
    "\0\u1068\0\u10a0\0\u10d8\0\u1110\0\u1148\0\u1180\0\u11b8\0\u11f0"+
    "\0\u1228\0\u1260\0\u1298\0\u12d0\0\u1308\0\u1340\0\u1378\0\u13b0"+
    "\0\u13e8\0\u1420\0\u1458\0\u07a8\0\u1490\0\u14c8\0\u1500\0\u07a8"+
    "\0\u1538\0\u1570\0\u15a8\0\u15e0\0\u0930\0\u1618\0\u1650\0\u0930"+
    "\0\u1688\0\u16c0\0\u16f8\0\u1730\0\u1768\0\u17a0\0\u17d8\0\u1810"+
    "\0\u1848\0\u1880\0\u18b8\0\u18f0\0\u0b28\0\u1928\0\u1960\0\u1998"+
    "\0\u19d0\0\u1a08\0\u1a40\0\u1a78\0\u0268\0\u1ab0\0\u1ae8\0\u1b20"+
    "\0\u1b58\0\u1b90\0\u1bc8\0\u1c00\0\u1c38\0\u1c70\0\u1ca8\0\u1ce0"+
    "\0\u1d18\0\u1d50\0\u1d88\0\u1dc0\0\u1df8\0\u1e30\0\u1e68\0\u1ea0"+
    "\0\u1ed8\0\u1f10\0\u1f48\0\u1f80\0\u1fb8\0\u1ff0\0\u2028\0\u2060"+
    "\0\u2098\0\u20d0\0\u2108\0\u0188\0\u2140\0\u2178\0\u21b0\0\u21e8"+
    "\0\u2220\0\u2258\0\u2290\0\u22c8\0\u2300\0\u2338\0\u2370\0\u23a8"+
    "\0\u23e0\0\u2418\0\u2450\0\u2488\0\u24c0\0\u24f8\0\u2530\0\u2568"+
    "\0\u25a0\0\u25d8\0\u2610\0\u2648\0\u2680\0\u26b8\0\u26f0\0\u2728"+
    "\0\u2760\0\u2798\0\u27d0\0\u2808\0\u2840\0\u2878\0\u28b0\0\u28e8"+
    "\0\u2920\0\u2958\0\u2990\0\u29c8\0\u2a00\0\u2a38\0\u2a70\0\u2aa8"+
    "\0\u2ae0\0\u2b18\0\u2b50\0\u2b88\0\u2bc0\0\u2bf8\0\u2c30\0\u2c68"+
    "\0\u2ca0\0\u2cd8\0\u2d10\0\u2d48\0\u2d80\0\u2db8\0\u2df0\0\u2e28"+
    "\0\u2e60\0\u2e98\0\u0188\0\u2ed0\0\u2f08\0\u2f40\0\u2f78\0\u2fb0"+
    "\0\u2fe8\0\u3020\0\u3058\0\u3090\0\u30c8\0\u3100\0\u3138\0\u3170"+
    "\0\u31a8\0\u31e0\0\u3218\0\u3250\0\u3288\0\u32c0\0\u32f8\0\u0930"+
    "\0\u3330\0\u3368\0\u33a0\0\u33d8\0\u3410\0\u3448\0\u3480\0\u34b8"+
    "\0\u34f0\0\u3528\0\u3560\0\u3598\0\u35d0\0\u3608\0\u3640\0\u3678"+
    "\0\u36b0\0\u36e8\0\u0188\0\u3720\0\u3758\0\u3790\0\u37c8\0\u3800"+
    "\0\u3838\0\u3870\0\u38a8\0\u38e0\0\u3918\0\u3950\0\u3988\0\u39c0"+
    "\0\u39f8\0\u3a30\0\u0930\0\u3a68\0\u3aa0\0\u3ad8\0\u3b10\0\u3b48"+
    "\0\u3b80\0\u3bb8\0\u3bf0\0\u3c28\0\u3c60\0\u3c98\0\u3cd0\0\u3d08"+
    "\0\u3d40\0\u3d78\0\u3db0\0\u3de8\0\u3e20\0\u3e58\0\u3e90\0\u3ec8"+
    "\0\u3f00\0\u3f38\0\u0268\0\u3f70\0\u3fa8\0\u3fe0\0\u4018\0\u4050"+
    "\0\u4088\0\u40c0\0\u40f8\0\u4130\0\u4168\0\u41a0\0\u41d8\0\u4210"+
    "\0\u4248\0\u4280\0\u42b8\0\u42f0\0\u4328\0\u4360\0\u4398\0\u43d0"+
    "\0\u4408\0\u4440\0\u4478\0\u44b0\0\u44e8\0\u4520\0\u4558\0\u4590"+
    "\0\u0268\0\u45c8\0\u4600\0\u4638\0\u4670\0\u46a8\0\u46e0\0\u4718"+
    "\0\u4750\0\u4788\0\u47c0\0\u47f8\0\u4830\0\u4868\0\u48a0\0\u48d8"+
    "\0\u4910\0\u4948\0\u4980\0\u49b8\0\u0188\0\u49f0\0\u4a28\0\u4a60"+
    "\0\u4a98\0\u4ad0\0\u4b08\0\u4b40\0\u4b78\0\u4bb0\0\u4be8\0\u4c20"+
    "\0\u4c58\0\u4c90\0\u4cc8\0\u4d00\0\u4d38\0\u4d70\0\u4da8\0\u4de0"+
    "\0\u4e18\0\u4e50\0\u4e88\0\u4ec0\0\u4ef8\0\u4f30\0\u4f68\0\u4fa0"+
    "\0\u4fd8\0\u5010\0\u5048\0\u5080\0\u50b8\0\u50f0\0\u5128\0\u0188";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[408];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length() - 1;
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /**
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpacktrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\10\5\11\1\12\1\13\2\14\1\15\1\10\1\16"+
    "\1\17\1\10\1\20\1\21\1\22\1\23\1\14\3\10"+
    "\1\14\1\24\1\14\1\25\1\26\1\27\1\30\1\31"+
    "\1\10\1\32\1\33\1\34\1\35\1\10\1\36\1\37"+
    "\1\40\1\41\2\10\1\42\1\43\1\44\1\45\1\46"+
    "\3\10\1\47\1\50\1\51\1\11\1\10\1\52\1\53"+
    "\2\54\1\53\1\54\1\55\1\14\2\52\1\56\6\52"+
    "\1\14\6\52\1\57\32\52\1\60\1\50\1\61\1\54"+
    "\1\52\1\14\5\11\12\14\1\62\7\14\1\63\35\14"+
    "\1\11\1\14\1\64\1\53\2\54\1\53\1\54\1\65"+
    "\1\14\2\64\1\66\3\64\2\67\1\70\1\71\5\64"+
    "\1\72\1\73\1\74\6\64\1\75\13\64\1\76\6\64"+
    "\2\14\1\61\1\54\1\64\1\77\5\100\56\77\1\101"+
    "\1\77\1\100\1\77\64\102\1\103\3\102\1\64\5\11"+
    "\1\64\1\14\11\64\1\22\5\64\1\104\1\105\1\106"+
    "\31\64\3\14\1\11\1\64\1\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\31\10\1\0"+
    "\1\10\2\0\1\10\1\0\5\11\22\0\1\112\35\0"+
    "\1\11\1\0\6\113\1\114\17\113\1\0\1\113\1\115"+
    "\37\113\2\13\4\0\61\13\71\0\12\15\1\116\13\15"+
    "\1\0\41\15\1\10\1\110\2\0\1\110\1\0\1\10"+
    "\1\0\1\10\1\0\1\10\1\0\1\117\1\0\2\10"+
    "\3\0\1\120\3\10\1\0\1\121\1\0\31\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\4\10\1\122\24\10\1\0"+
    "\1\10\2\0\1\10\14\0\1\123\13\0\1\124\37\0"+
    "\2\10\4\11\61\10\1\0\1\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\15\10\1\125"+
    "\13\10\1\0\1\10\2\0\2\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\16\10\1\126"+
    "\12\10\1\0\1\10\2\0\2\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\13\10\1\127"+
    "\2\10\1\130\12\10\1\0\1\10\2\0\2\10\1\107"+
    "\2\0\1\107\1\0\1\10\1\0\1\10\1\0\2\10"+
    "\1\110\1\0\2\10\4\0\3\10\1\0\1\111\1\0"+
    "\5\10\1\131\3\10\1\132\4\10\1\133\12\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\11\10\1\134\4\10\1\135"+
    "\12\10\1\0\1\10\2\0\2\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\20\10\1\136"+
    "\10\10\1\0\1\10\2\0\2\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\5\10\1\137"+
    "\10\10\1\140\12\10\1\0\1\10\2\0\2\10\1\107"+
    "\2\0\1\107\1\0\1\10\1\0\1\10\1\0\2\10"+
    "\1\110\1\0\2\10\4\0\3\10\1\0\1\111\1\0"+
    "\3\10\1\141\16\10\1\142\6\10\1\0\1\10\2\0"+
    "\2\10\1\107\2\0\1\107\1\0\1\10\1\0\1\10"+
    "\1\0\2\10\1\110\1\0\2\10\4\0\3\10\1\0"+
    "\1\111\1\0\1\10\1\143\3\10\1\144\3\10\1\145"+
    "\17\10\1\0\1\10\2\0\2\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\23\10\1\146"+
    "\5\10\1\0\1\10\2\0\2\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\5\10\1\147"+
    "\23\10\1\0\1\10\2\0\2\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\17\10\1\150"+
    "\11\10\1\0\1\10\2\0\2\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\10\10\1\151"+
    "\5\10\1\152\3\10\1\153\6\10\1\0\1\10\2\0"+
    "\2\10\1\107\2\0\1\107\1\0\1\10\1\0\1\10"+
    "\1\0\2\10\1\110\1\0\2\10\4\0\3\10\1\0"+
    "\1\111\1\0\1\10\1\154\3\10\1\155\10\10\1\156"+
    "\12\10\1\0\1\10\2\0\2\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\15\10\1\157"+
    "\13\10\1\0\1\10\2\0\2\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\1\10\1\160"+
    "\3\10\1\161\23\10\1\0\1\10\2\0\2\10\1\107"+
    "\2\0\1\107\1\0\1\10\1\0\1\10\1\0\2\10"+
    "\1\110\1\0\2\10\4\0\3\10\1\0\1\111\1\0"+
    "\11\10\1\162\17\10\1\0\1\10\2\0\1\10\1\163"+
    "\5\0\10\163\2\0\4\163\3\0\3\163\31\0\1\163"+
    "\1\50\1\163\1\0\1\163\1\52\1\164\2\0\1\164"+
    "\1\0\1\52\1\0\11\52\1\0\6\52\1\165\32\52"+
    "\1\0\1\52\2\0\1\52\1\0\1\53\2\54\1\53"+
    "\1\54\22\0\1\166\35\0\1\54\2\0\5\54\22\0"+
    "\1\167\35\0\1\54\1\0\2\55\2\113\1\55\1\113"+
    "\1\170\1\113\11\55\1\113\4\55\1\52\1\55\1\171"+
    "\32\55\1\113\1\55\2\113\1\55\2\56\2\15\1\56"+
    "\1\15\1\56\1\15\2\56\1\170\6\56\1\15\4\56"+
    "\1\52\1\56\1\172\32\56\1\15\1\56\2\15\1\56"+
    "\1\52\1\164\2\53\1\173\1\174\1\52\1\0\11\52"+
    "\1\0\6\52\1\165\32\52\1\0\1\52\2\0\1\52"+
    "\2\0\4\11\62\0\1\64\1\175\2\0\1\175\1\0"+
    "\1\64\1\0\11\64\1\0\5\64\1\0\1\176\1\0"+
    "\31\64\1\0\1\64\2\0\1\64\2\177\2\113\1\177"+
    "\1\113\1\200\1\201\11\177\1\113\4\177\1\64\1\113"+
    "\1\202\1\113\31\177\1\113\1\177\2\113\1\177\2\203"+
    "\2\15\1\203\1\15\1\203\1\204\2\203\1\200\6\203"+
    "\1\15\4\203\1\64\1\15\1\205\1\15\31\203\1\15"+
    "\1\203\2\15\1\203\1\64\1\175\2\0\1\175\1\0"+
    "\1\64\1\0\5\64\1\206\2\67\1\64\1\0\5\64"+
    "\1\0\1\207\1\0\31\64\1\0\1\64\2\0\2\64"+
    "\1\175\2\53\1\210\1\174\1\64\1\0\11\64\1\0"+
    "\5\64\1\0\1\176\1\0\31\64\1\0\1\64\2\0"+
    "\2\64\1\175\2\0\1\175\1\0\1\64\1\0\11\64"+
    "\1\0\5\64\1\0\1\211\1\0\1\64\1\212\27\64"+
    "\1\0\1\64\2\0\2\64\1\175\2\0\1\175\1\0"+
    "\1\64\1\0\11\64\1\0\5\64\1\0\1\213\1\0"+
    "\20\64\1\214\10\64\1\0\1\64\2\0\1\64\1\77"+
    "\5\0\56\77\1\101\1\77\1\0\1\77\1\0\5\100"+
    "\60\0\1\100\1\0\64\215\1\103\3\215\64\0\1\103"+
    "\3\0\1\64\1\175\2\11\1\216\1\11\1\64\1\0"+
    "\11\64\1\0\5\64\1\0\1\176\1\0\31\64\1\0"+
    "\1\64\2\0\1\64\1\10\1\110\2\0\1\110\1\0"+
    "\1\10\1\0\1\10\1\0\1\10\3\0\2\10\4\0"+
    "\3\10\1\0\1\217\1\0\31\10\1\0\1\10\2\0"+
    "\3\10\3\107\1\220\61\10\1\0\6\113\1\116\17\113"+
    "\1\0\1\113\1\115\37\113\6\0\1\221\61\0\67\113"+
    "\15\0\1\117\6\0\1\120\4\0\1\222\37\0\2\10"+
    "\3\223\1\224\61\10\15\0\1\123\6\0\1\225\4\0"+
    "\1\226\41\0\3\227\1\230\62\0\1\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\11\10"+
    "\1\231\17\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\13\10"+
    "\1\20\4\10\1\232\10\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\1\10\1\233\27\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\15\10\1\234\13\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\21\10\1\235\7\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\20\10\1\236\10\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\23\10\1\237\5\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\13\10\1\240\15\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\15\10\1\241\13\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\11\10\1\242\17\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\11\10\1\243\17\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\20\10\1\244\10\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\16\10\1\245\12\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\1\10\1\246\27\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\2\10\1\247\26\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\6\10\1\250\22\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\15\10\1\251\13\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\13\10\1\252\15\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\1\10\1\253\27\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\1\10\1\254\27\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\1\10\1\255\27\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\23\10\1\256\5\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\20\10\1\257\6\10\1\260\1\10\1\0\1\10"+
    "\2\0\2\10\1\107\2\0\1\107\1\0\1\10\1\0"+
    "\1\10\1\0\2\10\1\110\1\0\2\10\4\0\3\10"+
    "\1\0\1\111\1\0\20\10\1\261\10\10\1\0\1\10"+
    "\2\0\2\10\1\107\2\0\1\107\1\0\1\10\1\0"+
    "\1\10\1\0\2\10\1\110\1\0\2\10\4\0\3\10"+
    "\1\0\1\111\1\0\26\10\1\262\2\10\1\0\1\10"+
    "\2\0\2\10\1\107\2\0\1\107\1\0\1\10\1\0"+
    "\1\10\1\0\2\10\1\110\1\0\2\10\4\0\3\10"+
    "\1\0\1\111\1\0\16\10\1\263\1\264\11\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\4\10\1\265\24\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\20\10\1\266\10\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\20\10\1\267\10\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\4\10\1\270\24\10\1\0"+
    "\1\10\2\0\1\10\1\163\5\0\10\163\2\0\4\163"+
    "\3\0\3\163\31\0\1\163\1\0\1\163\1\0\1\163"+
    "\1\52\4\164\1\271\1\52\1\0\11\52\1\0\6\52"+
    "\1\165\32\52\1\0\1\52\2\0\1\52\2\0\3\53"+
    "\1\174\64\0\4\54\62\0\5\55\1\272\1\55\1\113"+
    "\11\55\1\113\6\55\1\273\32\55\1\113\1\55\2\113"+
    "\1\52\5\56\1\274\1\56\1\15\2\56\1\170\6\56"+
    "\1\15\4\56\1\52\1\56\1\172\32\56\1\15\1\56"+
    "\2\15\1\56\1\52\1\173\2\54\1\173\1\54\1\52"+
    "\1\0\11\52\1\0\6\52\1\275\32\52\1\0\1\52"+
    "\1\0\1\54\1\52\1\0\2\53\1\54\1\53\1\54"+
    "\22\0\1\166\35\0\1\54\1\0\1\64\4\175\1\276"+
    "\1\64\1\0\11\64\1\0\5\64\1\0\1\176\1\0"+
    "\31\64\1\0\1\64\2\0\1\64\2\177\2\113\1\177"+
    "\1\113\1\200\1\113\11\177\1\113\4\177\1\64\1\113"+
    "\1\277\1\113\31\177\1\113\1\177\2\113\1\177\6\113"+
    "\1\116\7\113\2\300\4\113\1\300\1\113\1\0\1\113"+
    "\1\301\2\113\6\300\27\113\2\177\3\302\1\303\1\177"+
    "\1\201\11\177\1\113\5\177\1\113\1\304\1\113\31\177"+
    "\1\113\1\177\2\113\1\64\2\203\2\15\1\203\1\15"+
    "\1\203\1\15\2\203\1\200\6\203\1\15\4\203\1\64"+
    "\1\15\1\205\1\15\31\203\1\15\1\203\2\15\1\203"+
    "\12\15\1\116\3\15\2\305\4\15\1\305\1\15\1\0"+
    "\4\15\6\305\27\15\5\203\1\306\1\203\1\15\2\203"+
    "\1\200\6\203\1\15\4\203\1\64\1\15\1\205\1\15"+
    "\31\203\1\15\1\203\2\15\1\203\1\64\1\175\2\0"+
    "\1\175\1\0\1\64\1\0\6\64\2\307\1\64\1\0"+
    "\5\64\1\0\1\310\1\0\31\64\1\0\1\64\2\0"+
    "\2\64\1\175\3\311\1\312\1\64\1\0\11\64\1\0"+
    "\5\64\1\0\1\176\1\0\31\64\1\0\1\64\2\0"+
    "\2\64\1\210\2\54\1\210\1\54\1\64\1\0\11\64"+
    "\1\0\5\64\1\0\1\313\1\0\31\64\1\0\1\64"+
    "\1\0\1\54\2\64\1\175\3\314\1\315\1\64\1\0"+
    "\11\64\1\0\5\64\1\0\1\176\1\0\31\64\1\0"+
    "\1\64\2\0\2\64\1\175\2\0\1\175\1\0\1\64"+
    "\1\0\11\64\1\0\5\64\1\0\1\316\1\0\13\64"+
    "\1\317\15\64\1\0\1\64\2\0\2\64\1\175\3\320"+
    "\1\321\1\64\1\0\11\64\1\0\5\64\1\0\1\176"+
    "\1\0\31\64\1\0\1\64\2\0\2\64\1\175\2\0"+
    "\1\175\1\0\1\64\1\0\11\64\1\0\5\64\1\0"+
    "\1\322\1\0\23\64\1\323\5\64\1\0\1\64\2\0"+
    "\2\64\1\216\2\11\1\216\1\11\1\64\1\0\11\64"+
    "\1\0\5\64\1\0\1\324\1\0\31\64\1\0\1\64"+
    "\1\0\1\11\1\64\2\10\3\110\1\325\61\10\1\0"+
    "\1\10\2\107\1\0\1\107\1\0\1\10\1\0\1\10"+
    "\1\0\2\10\1\110\1\0\2\10\4\0\3\10\1\0"+
    "\1\111\1\0\31\10\1\0\1\10\2\0\1\10\6\221"+
    "\1\326\61\221\2\0\3\327\1\330\62\0\1\10\1\223"+
    "\2\0\1\223\1\0\1\10\1\0\1\10\1\0\1\10"+
    "\1\0\1\117\1\0\2\10\3\0\1\120\3\10\1\0"+
    "\1\121\1\0\31\10\1\0\1\10\2\0\2\10\2\223"+
    "\1\0\1\223\1\0\1\10\1\0\1\10\1\0\1\10"+
    "\1\0\1\117\1\0\2\10\3\0\1\120\3\10\1\0"+
    "\1\121\1\0\31\10\1\0\1\10\2\0\1\10\2\0"+
    "\3\331\1\332\63\0\1\227\2\0\1\227\7\0\1\123"+
    "\13\0\1\124\40\0\2\227\1\0\1\227\7\0\1\123"+
    "\13\0\1\124\37\0\1\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\14\10\1\333\14\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\4\10\1\334\24\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\21\10\1\335\7\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\21\10\1\336\7\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\3\10\1\264\25\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\5\10\1\337\23\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\2\10\1\340\26\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\13\10\1\341\15\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\22\10\1\342\6\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\4\10\1\343\24\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\7\10\1\344\21\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\11\10\1\345\17\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\15\10\1\264\13\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\13\10\1\346\15\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\5\10\1\347\23\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\22\10\1\264\6\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\12\10\1\264\16\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\22\10\1\350\6\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\20\10\1\264\10\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\3\10\1\351\25\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\4\10\1\352\12\10"+
    "\1\353\11\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\20\10"+
    "\1\354\10\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\16\10"+
    "\1\355\12\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\13\10"+
    "\1\356\15\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\7\10"+
    "\1\357\21\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\22\10"+
    "\1\360\6\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\13\10"+
    "\1\361\15\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\5\10"+
    "\1\362\23\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\21\10"+
    "\1\363\7\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\22\10"+
    "\1\364\6\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\22\10"+
    "\1\365\6\10\1\0\1\10\2\0\1\10\1\52\2\164"+
    "\1\0\1\164\1\0\1\52\1\0\11\52\1\0\6\52"+
    "\1\165\32\52\1\0\1\52\2\0\1\52\3\55\1\113"+
    "\1\55\1\113\1\170\1\113\11\55\1\113\4\55\1\52"+
    "\1\55\1\171\32\55\1\113\1\55\2\113\6\55\1\272"+
    "\1\170\1\113\11\55\1\113\4\55\1\52\1\55\1\171"+
    "\32\55\1\113\1\55\2\113\1\55\3\56\1\15\1\56"+
    "\1\15\1\56\1\15\2\56\1\170\6\56\1\15\4\56"+
    "\1\52\1\56\1\172\32\56\1\15\1\56\2\15\1\56"+
    "\1\52\1\164\3\173\1\366\1\52\1\0\11\52\1\0"+
    "\6\52\1\165\32\52\1\0\1\52\2\0\1\52\1\64"+
    "\2\175\1\0\1\175\1\0\1\64\1\0\11\64\1\0"+
    "\5\64\1\0\1\176\1\0\31\64\1\0\1\64\2\0"+
    "\1\64\5\177\1\367\1\177\1\113\11\177\1\113\5\177"+
    "\1\113\1\304\1\113\31\177\1\113\1\177\2\113\1\64"+
    "\6\113\1\116\7\113\2\370\4\113\1\370\1\113\1\0"+
    "\1\113\1\371\2\113\6\370\31\113\3\372\1\373\10\113"+
    "\2\300\4\113\1\300\10\113\3\300\27\113\1\0\1\177"+
    "\1\302\2\113\1\302\1\113\1\200\1\201\11\177\1\113"+
    "\4\177\1\64\1\113\1\202\1\113\31\177\1\113\1\177"+
    "\2\113\2\177\2\302\1\113\1\302\1\113\1\200\1\201"+
    "\11\177\1\113\4\177\1\64\1\113\1\202\1\113\31\177"+
    "\1\113\1\177\2\113\6\177\1\367\1\200\1\113\11\177"+
    "\1\113\4\177\1\64\1\113\1\277\1\113\31\177\1\113"+
    "\1\177\2\113\1\177\12\15\1\116\3\15\2\374\4\15"+
    "\1\374\1\15\1\0\4\15\6\374\27\15\3\203\1\15"+
    "\1\203\1\15\1\203\1\15\2\203\1\200\6\203\1\15"+
    "\4\203\1\64\1\15\1\205\1\15\31\203\1\15\1\203"+
    "\2\15\1\203\1\64\1\175\2\0\1\175\1\0\1\64"+
    "\1\0\6\64\2\307\1\64\1\0\5\64\1\0\1\375"+
    "\1\0\31\64\1\0\1\64\2\0\2\64\1\175\3\376"+
    "\1\377\1\64\1\0\11\64\1\0\5\64\1\0\1\176"+
    "\1\0\31\64\1\0\1\64\2\0\2\64\1\311\2\0"+
    "\1\311\1\0\1\64\1\0\5\64\1\206\2\67\1\64"+
    "\1\0\5\64\1\0\1\207\1\0\31\64\1\0\1\64"+
    "\2\0\2\64\2\311\1\0\1\311\1\0\1\64\1\0"+
    "\5\64\1\206\2\67\1\64\1\0\5\64\1\0\1\207"+
    "\1\0\31\64\1\0\1\64\2\0\2\64\1\175\3\210"+
    "\1\u0100\1\64\1\0\11\64\1\0\5\64\1\0\1\176"+
    "\1\0\31\64\1\0\1\64\2\0\2\64\1\314\2\0"+
    "\1\314\1\0\1\64\1\0\11\64\1\0\5\64\1\0"+
    "\1\211\1\0\1\64\1\212\27\64\1\0\1\64\2\0"+
    "\2\64\2\314\1\0\1\314\1\0\1\64\1\0\11\64"+
    "\1\0\5\64\1\0\1\211\1\0\1\64\1\212\27\64"+
    "\1\0\1\64\2\0\2\64\1\175\3\u0101\1\u0102\1\64"+
    "\1\0\11\64\1\0\5\64\1\0\1\176\1\0\31\64"+
    "\1\0\1\64\2\0\2\64\1\175\2\0\1\175\1\0"+
    "\1\64\1\0\11\64\1\0\5\64\1\0\1\u0103\1\0"+
    "\21\64\1\u0104\7\64\1\0\1\64\2\0\2\64\1\320"+
    "\2\0\1\320\1\0\1\64\1\0\11\64\1\0\5\64"+
    "\1\0\1\213\1\0\20\64\1\214\10\64\1\0\1\64"+
    "\2\0\2\64\2\320\1\0\1\320\1\0\1\64\1\0"+
    "\11\64\1\0\5\64\1\0\1\213\1\0\20\64\1\214"+
    "\10\64\1\0\1\64\2\0\2\64\1\175\3\u0105\1\u0106"+
    "\1\64\1\0\11\64\1\0\5\64\1\0\1\176\1\0"+
    "\31\64\1\0\1\64\2\0\2\64\1\175\2\0\1\175"+
    "\1\0\1\64\1\0\11\64\1\0\5\64\1\0\1\u0107"+
    "\1\0\5\64\1\u0108\23\64\1\0\1\64\2\0\2\64"+
    "\1\175\3\216\1\u0109\1\64\1\0\11\64\1\0\5\64"+
    "\1\0\1\176\1\0\31\64\1\0\1\64\2\0\1\64"+
    "\1\10\2\110\1\0\1\110\1\0\1\10\1\0\1\10"+
    "\1\0\1\10\3\0\2\10\4\0\3\10\1\0\1\217"+
    "\1\0\31\10\1\0\1\10\2\0\1\10\6\221\1\u010a"+
    "\61\221\1\0\1\327\2\0\1\327\7\0\1\117\6\0"+
    "\1\120\4\0\1\222\40\0\2\327\1\0\1\327\7\0"+
    "\1\117\6\0\1\120\4\0\1\222\40\0\1\331\2\0"+
    "\1\331\7\0\1\123\6\0\1\225\4\0\1\226\40\0"+
    "\2\331\1\0\1\331\7\0\1\123\6\0\1\225\4\0"+
    "\1\226\37\0\1\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\1\10\1\u010b\27\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\5\10\1\u010c\23\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\21\10\1\u010d\7\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\22\10\1\u010e\6\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\3\10\1\u010f\25\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\13\10\1\u0110\15\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\u0111\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\5\10\1\20\23\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\u0112\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\31\10\1\0\1\10\2\0"+
    "\2\10\1\107\2\0\1\107\1\0\1\10\1\0\1\10"+
    "\1\0\2\10\1\u0113\1\0\2\10\4\0\3\10\1\0"+
    "\1\111\1\0\31\10\1\0\1\10\2\0\2\10\1\107"+
    "\2\0\1\107\1\0\1\10\1\0\1\10\1\0\2\10"+
    "\1\110\1\0\2\10\4\0\3\10\1\0\1\111\1\0"+
    "\10\10\1\250\20\10\1\0\1\10\2\0\2\10\1\107"+
    "\2\0\1\107\1\0\1\10\1\0\1\10\1\0\2\10"+
    "\1\110\1\0\2\10\4\0\3\10\1\0\1\111\1\0"+
    "\30\10\1\u0114\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\11\10"+
    "\1\u0115\17\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\13\10"+
    "\1\264\15\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\11\10"+
    "\1\u0116\17\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\11\10"+
    "\1\u0117\17\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\16\10"+
    "\1\u0118\12\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\5\10"+
    "\1\264\23\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\3\10"+
    "\1\u0119\25\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\12\10"+
    "\1\u011a\16\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\5\10"+
    "\1\u011b\23\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\110"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\5\10"+
    "\1\u011c\23\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\u011d"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\31\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\22\10\1\u011e\6\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\20\10\1\u011f\10\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\11\10\1\u0120\17\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\10\10\1\264\20\10"+
    "\1\0\1\10\2\0\1\10\1\52\2\173\1\54\1\173"+
    "\1\54\1\52\1\0\11\52\1\0\6\52\1\275\32\52"+
    "\1\0\1\52\1\0\1\54\1\52\3\177\1\113\1\177"+
    "\1\113\1\200\1\113\11\177\1\113\4\177\1\64\1\113"+
    "\1\277\1\113\31\177\1\113\1\177\2\113\1\177\6\113"+
    "\1\116\7\113\2\u0121\4\113\1\u0121\1\113\1\0\1\113"+
    "\1\u0122\2\113\6\u0121\31\113\3\u0123\1\u0124\10\113\2\370"+
    "\4\113\1\370\10\113\3\370\27\113\1\0\1\113\1\372"+
    "\2\113\1\372\1\113\1\116\7\113\2\300\4\113\1\300"+
    "\1\113\1\0\1\113\1\301\2\113\6\300\30\113\2\372"+
    "\1\113\1\372\1\113\1\116\7\113\2\300\4\113\1\300"+
    "\1\113\1\0\1\113\1\301\2\113\6\300\27\113\12\15"+
    "\1\116\3\15\2\u0125\4\15\1\u0125\1\15\1\0\4\15"+
    "\6\u0125\27\15\1\64\1\175\3\u0126\1\u0127\1\64\1\0"+
    "\11\64\1\0\5\64\1\0\1\176\1\0\31\64\1\0"+
    "\1\64\2\0\2\64\1\376\2\0\1\376\1\0\1\64"+
    "\1\0\6\64\2\307\1\64\1\0\5\64\1\0\1\310"+
    "\1\0\31\64\1\0\1\64\2\0\2\64\2\376\1\0"+
    "\1\376\1\0\1\64\1\0\6\64\2\307\1\64\1\0"+
    "\5\64\1\0\1\310\1\0\31\64\1\0\1\64\2\0"+
    "\2\64\2\210\1\54\1\210\1\54\1\64\1\0\11\64"+
    "\1\0\5\64\1\0\1\313\1\0\31\64\1\0\1\64"+
    "\1\0\1\54\2\64\1\u0101\2\0\1\u0101\1\0\1\64"+
    "\1\0\11\64\1\0\5\64\1\0\1\316\1\0\13\64"+
    "\1\317\15\64\1\0\1\64\2\0\2\64\2\u0101\1\0"+
    "\1\u0101\1\0\1\64\1\0\11\64\1\0\5\64\1\0"+
    "\1\316\1\0\13\64\1\317\15\64\1\0\1\64\2\0"+
    "\2\64\1\175\3\u0128\1\u0129\1\64\1\0\11\64\1\0"+
    "\5\64\1\0\1\176\1\0\31\64\1\0\1\64\2\0"+
    "\2\64\1\175\2\0\1\175\1\0\1\64\1\0\11\64"+
    "\1\0\5\64\1\0\1\u012a\1\0\5\64\1\u012b\23\64"+
    "\1\0\1\64\2\0\2\64\1\u0105\2\0\1\u0105\1\0"+
    "\1\64\1\0\11\64\1\0\5\64\1\0\1\322\1\0"+
    "\23\64\1\323\5\64\1\0\1\64\2\0\2\64\2\u0105"+
    "\1\0\1\u0105\1\0\1\64\1\0\11\64\1\0\5\64"+
    "\1\0\1\322\1\0\23\64\1\323\5\64\1\0\1\64"+
    "\2\0\2\64\1\175\3\u012c\1\u012d\1\64\1\0\11\64"+
    "\1\0\5\64\1\0\1\176\1\0\31\64\1\0\1\64"+
    "\2\0\2\64\2\216\1\11\1\216\1\11\1\64\1\0"+
    "\11\64\1\0\5\64\1\0\1\324\1\0\31\64\1\0"+
    "\1\64\1\0\1\11\1\64\6\221\1\u012e\61\221\1\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\22\10\1\u012f\6\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\20\10\1\u0130\10\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\5\10\1\266\23\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\20\10\1\u0131\10\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\22\10\1\u0132\6\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\5\10\1\u0133\23\10\1\0\1\10\2\0\2\10"+
    "\1\110\2\0\1\110\1\0\1\10\1\0\1\10\1\0"+
    "\1\10\3\0\2\10\4\0\3\10\1\0\1\217\1\0"+
    "\17\10\1\u0134\11\10\1\0\1\10\2\0\2\10\1\110"+
    "\2\0\1\110\1\0\1\10\1\0\1\10\1\0\1\10"+
    "\3\0\2\10\4\0\3\10\1\0\1\217\1\0\3\10"+
    "\1\u0135\15\10\1\u0136\7\10\1\0\1\10\2\0\2\10"+
    "\1\110\2\0\1\110\1\0\1\10\1\0\1\10\1\0"+
    "\1\10\3\0\2\10\4\0\3\10\1\0\1\217\1\0"+
    "\3\10\1\u0137\3\10\1\u0138\10\10\1\u0139\10\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\16\10\1\u013a\12\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\3\10\1\122\25\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\17\10\1\u013b\11\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\22\10\1\u013c\6\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\25\10\1\122\3\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\5\10\1\u013d\23\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\5\10\1\u013e\23\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\22\10\1\u013d\6\10\1\0"+
    "\1\10\2\0\2\10\1\110\2\0\1\110\1\0\1\10"+
    "\1\0\1\10\1\0\1\10\3\0\2\10\4\0\3\10"+
    "\1\0\1\217\1\0\22\10\1\u013f\6\10\1\0\1\10"+
    "\2\0\2\10\1\107\2\0\1\107\1\0\1\10\1\0"+
    "\1\10\1\0\2\10\1\110\1\0\2\10\4\0\3\10"+
    "\1\0\1\111\1\0\11\10\1\u0140\17\10\1\0\1\10"+
    "\2\0\2\10\1\107\2\0\1\107\1\0\1\10\1\0"+
    "\1\10\1\0\2\10\1\110\1\0\2\10\4\0\3\10"+
    "\1\0\1\111\1\0\13\10\1\u0141\15\10\1\0\1\10"+
    "\2\0\2\10\1\107\2\0\1\107\1\0\1\10\1\0"+
    "\1\10\1\0\2\10\1\110\1\0\2\10\4\0\3\10"+
    "\1\0\1\111\1\0\3\10\1\u0142\25\10\1\0\1\10"+
    "\2\0\1\10\6\113\1\u0143\7\113\2\u0144\4\113\1\u0144"+
    "\1\113\1\0\1\113\1\u0145\2\113\6\u0144\31\113\3\u0146"+
    "\1\u0147\10\113\2\u0121\4\113\1\u0121\10\113\3\u0121\27\113"+
    "\1\0\1\113\1\u0123\2\113\1\u0123\1\113\1\116\7\113"+
    "\2\370\4\113\1\370\1\113\1\0\1\113\1\371\2\113"+
    "\6\370\30\113\2\u0123\1\113\1\u0123\1\113\1\116\7\113"+
    "\2\370\4\113\1\370\1\113\1\0\1\113\1\371\2\113"+
    "\6\370\27\113\12\15\1\u0143\3\15\2\u0148\4\15\1\u0148"+
    "\1\15\1\0\4\15\6\u0148\27\15\1\64\1\u0126\2\0"+
    "\1\u0126\1\0\1\64\1\0\6\64\2\307\1\64\1\0"+
    "\5\64\1\0\1\375\1\0\31\64\1\0\1\64\2\0"+
    "\2\64\2\u0126\1\0\1\u0126\1\0\1\64\1\0\6\64"+
    "\2\307\1\64\1\0\5\64\1\0\1\375\1\0\31\64"+
    "\1\0\1\64\2\0\2\64\1\u0128\2\0\1\u0128\1\0"+
    "\1\64\1\0\11\64\1\0\5\64\1\0\1\u0103\1\0"+
    "\21\64\1\u0104\7\64\1\0\1\64\2\0\2\64\2\u0128"+
    "\1\0\1\u0128\1\0\1\64\1\0\11\64\1\0\5\64"+
    "\1\0\1\u0103\1\0\21\64\1\u0104\7\64\1\0\1\64"+
    "\2\0\2\64\1\175\3\u0149\1\u014a\1\64\1\0\11\64"+
    "\1\0\5\64\1\0\1\176\1\0\31\64\1\0\1\64"+
    "\2\0\2\64\1\u012c\2\0\1\u012c\1\0\1\64\1\0"+
    "\11\64\1\0\5\64\1\0\1\u0107\1\0\5\64\1\u0108"+
    "\23\64\1\0\1\64\2\0\2\64\2\u012c\1\0\1\u012c"+
    "\1\0\1\64\1\0\11\64\1\0\5\64\1\0\1\u0107"+
    "\1\0\5\64\1\u0108\23\64\1\0\1\64\2\0\1\64"+
    "\6\0\1\u014b\61\0\1\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\5\10\1\20\23\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\u014c\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\31\10\1\0\1\10"+
    "\2\0\2\10\1\107\2\0\1\107\1\0\1\10\1\0"+
    "\1\10\1\0\2\10\1\110\1\0\2\10\4\0\3\10"+
    "\1\0\1\111\1\0\1\10\1\u014d\27\10\1\0\1\10"+
    "\2\0\2\10\1\107\2\0\1\107\1\0\1\10\1\0"+
    "\1\10\1\0\2\10\1\110\1\0\2\10\4\0\3\10"+
    "\1\0\1\111\1\0\11\10\1\u014e\17\10\1\0\1\10"+
    "\2\0\2\10\1\107\2\0\1\107\1\0\1\10\1\0"+
    "\1\10\1\0\2\10\1\u014f\1\0\2\10\4\0\3\10"+
    "\1\0\1\111\1\0\31\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\1\10\1\u0150\27\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\16\10\1\u0151\12\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\11\10\1\u0152\17\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\16\10\1\u0153\12\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\1\10\1\u0140\27\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\16\10\1\u0154\12\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\15\10\1\u0155\13\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\13\10\1\u0156\15\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\27\10\1\122\1\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\u0157\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\31\10\1\0\1\10\2\0\2\10\1\107\2\0"+
    "\1\107\1\0\1\10\1\0\1\10\1\0\2\10\1\u0158"+
    "\1\0\2\10\4\0\3\10\1\0\1\111\1\0\31\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\20\10\1\u0159\10\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\17\10\1\264\11\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\11\10\1\u015a\17\10"+
    "\1\0\1\10\2\0\2\10\1\107\2\0\1\107\1\0"+
    "\1\10\1\0\1\10\1\0\2\10\1\110\1\0\2\10"+
    "\4\0\3\10\1\0\1\111\1\0\1\10\1\u015b\27\10"+
    "\1\0\1\10\2\0\1\10\6\113\1\116\7\113\2\u015c"+
    "\4\113\1\u015c\1\113\1\0\1\113\1\u015d\2\113\6\u015c"+
    "\31\113\3\u015e\1\u015f\10\113\2\u0144\4\113\1\u0144\10\113"+
    "\3\u0144\27\113\1\0\1\113\1\u0146\2\113\1\u0146\1\113"+
    "\1\116\7\113\2\u0121\4\113\1\u0121\1\113\1\0\1\113"+
    "\1\u0122\2\113\6\u0121\30\113\2\u0146\1\113\1\u0146\1\113"+
    "\1\116\7\113\2\u0121\4\113\1\u0121\1\113\1\0\1\113"+
    "\1\u0122\2\113\6\u0121\27\113\12\15\1\116\3\15\2\u0160"+
    "\4\15\1\u0160\1\15\1\0\4\15\6\u0160\27\15\1\64"+
    "\1\u0149\2\0\1\u0149\1\0\1\64\1\0\11\64\1\0"+
    "\5\64\1\0\1\u012a\1\0\5\64\1\u012b\23\64\1\0"+
    "\1\64\2\0\2\64\2\u0149\1\0\1\u0149\1\0\1\64"+
    "\1\0\11\64\1\0\5\64\1\0\1\u012a\1\0\5\64"+
    "\1\u012b\23\64\1\0\1\64\2\0\1\64\6\0\1\u0161"+
    "\61\0\1\10\1\110\2\0\1\110\1\0\1\10\1\0"+
    "\1\10\1\0\1\10\3\0\2\10\4\0\3\10\1\0"+
    "\1\217\1\0\20\10\1\u0162\10\10\1\0\1\10\2\0"+
    "\2\10\1\107\2\0\1\107\1\0\1\10\1\0\1\10"+
    "\1\0\2\10\1\110\1\0\2\10\4\0\3\10\1\0"+
    "\1\111\1\0\11\10\1\u0163\17\10\1\0\1\10\2\0"+
    "\2\10\1\107\2\0\1\107\1\0\1\10\1\0\1\10"+
    "\1\0\2\10\1\110\1\0\2\10\4\0\3\10\1\0"+
    "\1\111\1\0\16\10\1\u0164\12\10\1\0\1\10\2\0"+
    "\2\10\1\110\2\0\1\110\1\0\1\10\1\0\1\10"+
    "\1\0\1\10\3\0\2\10\4\0\3\10\1\0\1\217"+
    "\1\0\2\10\1\u0165\26\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\22\10\1\u0166\6\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\13\10\1\u0167\15\10\1\0\1\10\2\0\2\10"+
    "\1\107\2\0\1\107\1\0\1\10\1\0\1\10\1\0"+
    "\2\10\1\110\1\0\2\10\4\0\3\10\1\0\1\111"+
    "\1\0\30\10\1\u0156\1\0\1\10\2\0\2\10\1\107"+
    "\2\0\1\107\1\0\1\10\1\0\1\10\1\0\2\10"+
    "\1\110\1\0\2\10\4\0\3\10\1\0\1\111\1\0"+
    "\13\10\1\u0168\15\10\1\0\1\10\2\0\2\10\1\107"+
    "\2\0\1\107\1\0\1\10\1\0\1\10\1\0\2\10"+
    "\1\110\1\0\2\10\4\0\3\10\1\0\1\111\1\0"+
    "\25\10\1\u0169\3\10\1\0\1\10\2\0\2\10\1\107"+
    "\2\0\1\107\1\0\1\10\1\0\1\10\1\0\2\10"+
    "\1\110\1\0\2\10\4\0\3\10\1\0\1\111\1\0"+
    "\22\10\1\u0142\6\10\1\0\1\10\2\0\2\10\1\107"+
    "\2\0\1\107\1\0\1\10\1\0\1\10\1\0\2\10"+
    "\1\110\1\0\2\10\4\0\3\10\1\0\1\111\1\0"+
    "\5\10\1\122\23\10\1\0\1\10\2\0\2\10\1\110"+
    "\2\0\1\110\1\0\1\10\1\0\1\10\1\0\1\10"+
    "\3\0\2\10\4\0\3\10\1\0\1\217\1\0\1\10"+
    "\1\u016a\27\10\1\0\1\10\2\0\2\10\1\110\2\0"+
    "\1\110\1\0\1\10\1\0\1\10\1\0\1\10\3\0"+
    "\2\10\4\0\3\10\1\0\1\217\1\0\4\10\1\u016b"+
    "\20\10\1\u016c\3\10\1\0\1\10\2\0\2\10\1\107"+
    "\2\0\1\107\1\0\1\10\1\0\1\10\1\0\2\10"+
    "\1\110\1\0\2\10\4\0\3\10\1\0\1\111\1\0"+
    "\1\10\1\u016d\27\10\1\0\1\10\2\0\2\10\1\107"+
    "\2\0\1\107\1\0\1\10\1\0\1\10\1\0\2\10"+
    "\1\110\1\0\2\10\4\0\3\10\1\0\1\111\1\0"+
    "\15\10\1\u0156\13\10\1\0\1\10\2\0\2\10\1\107"+
    "\2\0\1\107\1\0\1\10\1\0\1\10\1\0\2\10"+
    "\1\110\1\0\2\10\4\0\3\10\1\0\1\111\1\0"+
    "\13\10\1\u016e\15\10\1\0\1\10\2\0\1\10\6\113"+
    "\1\116\7\113\2\u016f\4\113\1\u016f\1\113\1\0\1\113"+
    "\1\u0170\2\113\6\u016f\31\113\3\u0171\1\u0172\10\113\2\u015c"+
    "\4\113\1\u015c\10\113\3\u015c\27\113\1\0\1\113\1\u015e"+
    "\2\113\1\u015e\1\113\1\u0143\7\113\2\u0144\4\113\1\u0144"+
    "\1\113\1\0\1\113\1\u0145\2\113\6\u0144\30\113\2\u015e"+
    "\1\113\1\u015e\1\113\1\u0143\7\113\2\u0144\4\113\1\u0144"+
    "\1\113\1\0\1\113\1\u0145\2\113\6\u0144\27\113\12\15"+
    "\1\116\3\15\2\u0173\4\15\1\u0173\1\15\1\0\4\15"+
    "\6\u0173\27\15\1\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\1\10\1\u0174\27\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\15\10\1\250\13\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\15\10\1\u0175\13\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\16\10\1\u0176\12\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\22\10\1\u0177\6\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\16\10\1\u0178\12\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\23\10\1\u0179\5\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\21\10\1\264\7\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\20\10\1\u017a\10\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\1\10\1\u017b\27\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\11\10\1\u017c\17\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\110\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\15\10\1\u017d\13\10\1\0"+
    "\1\10\2\0\2\10\1\107\2\0\1\107\1\0\1\10"+
    "\1\0\1\10\1\0\2\10\1\u017e\1\0\2\10\4\0"+
    "\3\10\1\0\1\111\1\0\31\10\1\0\1\10\2\0"+
    "\1\10\6\113\1\u0143\17\113\1\0\1\113\1\u017f\41\113"+
    "\3\u0180\1\u0181\10\113\2\u016f\4\113\1\u016f\10\113\3\u016f"+
    "\27\113\1\0\1\113\1\u0171\2\113\1\u0171\1\113\1\116"+
    "\7\113\2\u015c\4\113\1\u015c\1\113\1\0\1\113\1\u015d"+
    "\2\113\6\u015c\30\113\2\u0171\1\113\1\u0171\1\113\1\116"+
    "\7\113\2\u015c\4\113\1\u015c\1\113\1\0\1\113\1\u015d"+
    "\2\113\6\u015c\27\113\12\15\1\u0143\13\15\1\0\41\15"+
    "\1\10\1\107\2\0\1\107\1\0\1\10\1\0\1\10"+
    "\1\0\2\10\1\110\1\0\2\10\4\0\3\10\1\0"+
    "\1\111\1\0\4\10\1\u0182\24\10\1\0\1\10\2\0"+
    "\2\10\1\107\2\0\1\107\1\0\1\10\1\0\1\10"+
    "\1\0\2\10\1\110\1\0\2\10\4\0\3\10\1\0"+
    "\1\111\1\0\20\10\1\u0183\10\10\1\0\1\10\2\0"+
    "\2\10\1\107\2\0\1\107\1\0\1\10\1\0\1\10"+
    "\1\0\2\10\1\110\1\0\2\10\4\0\3\10\1\0"+
    "\1\111\1\0\5\10\1\u0184\23\10\1\0\1\10\2\0"+
    "\2\10\1\107\2\0\1\107\1\0\1\10\1\0\1\10"+
    "\1\0\2\10\1\110\1\0\2\10\4\0\3\10\1\0"+
    "\1\111\1\0\20\10\1\122\10\10\1\0\1\10\2\0"+
    "\2\10\1\107\2\0\1\107\1\0\1\10\1\0\1\10"+
    "\1\0\2\10\1\110\1\0\2\10\4\0\3\10\1\0"+
    "\1\111\1\0\14\10\1\u0185\14\10\1\0\1\10\2\0"+
    "\2\10\1\107\2\0\1\107\1\0\1\10\1\0\1\10"+
    "\1\0\2\10\1\110\1\0\2\10\4\0\3\10\1\0"+
    "\1\111\1\0\20\10\1\u0186\10\10\1\0\1\10\2\0"+
    "\2\10\1\107\2\0\1\107\1\0\1\10\1\0\1\10"+
    "\1\0\2\10\1\110\1\0\2\10\4\0\3\10\1\0"+
    "\1\111\1\0\21\10\1\u0187\7\10\1\0\1\10\2\0"+
    "\2\10\1\107\2\0\1\107\1\0\1\10\1\0\1\10"+
    "\1\0\2\10\1\110\1\0\2\10\4\0\3\10\1\0"+
    "\1\111\1\0\4\10\1\u0188\24\10\1\0\1\10\2\0"+
    "\2\10\1\107\2\0\1\107\1\0\1\10\1\0\1\10"+
    "\1\0\2\10\1\110\1\0\2\10\4\0\3\10\1\0"+
    "\1\111\1\0\21\10\1\u0189\7\10\1\0\1\10\2\0"+
    "\2\10\1\110\2\0\1\110\1\0\1\10\1\0\1\10"+
    "\1\0\1\10\3\0\2\10\4\0\3\10\1\0\1\217"+
    "\1\0\7\10\1\u0138\21\10\1\0\1\10\2\0\1\10"+
    "\2\113\3\u018a\1\u018b\61\113\1\0\1\113\1\u0180\2\113"+
    "\1\u0180\1\113\1\116\7\113\2\u016f\4\113\1\u016f\1\113"+
    "\1\0\1\113\1\u0170\2\113\6\u016f\30\113\2\u0180\1\113"+
    "\1\u0180\1\113\1\116\7\113\2\u016f\4\113\1\u016f\1\113"+
    "\1\0\1\113\1\u0170\2\113\6\u016f\27\113\1\10\1\107"+
    "\2\0\1\107\1\0\1\10\1\0\1\10\1\0\2\10"+
    "\1\110\1\0\2\10\4\0\3\10\1\0\1\111\1\0"+
    "\11\10\1\u018c\17\10\1\0\1\10\2\0\2\10\1\107"+
    "\2\0\1\107\1\0\1\10\1\0\1\10\1\0\2\10"+
    "\1\110\1\0\2\10\4\0\3\10\1\0\1\111\1\0"+
    "\4\10\1\u018d\24\10\1\0\1\10\2\0\2\10\1\107"+
    "\2\0\1\107\1\0\1\10\1\0\1\10\1\0\2\10"+
    "\1\110\1\0\2\10\4\0\3\10\1\0\1\111\1\0"+
    "\20\10\1\u018e\10\10\1\0\1\10\2\0\2\10\1\107"+
    "\2\0\1\107\1\0\1\10\1\0\1\10\1\0\2\10"+
    "\1\110\1\0\2\10\4\0\3\10\1\0\1\111\1\0"+
    "\15\10\1\u0169\13\10\1\0\1\10\2\0\2\10\1\107"+
    "\2\0\1\107\1\0\1\10\1\0\1\10\1\0\2\10"+
    "\1\110\1\0\2\10\4\0\3\10\1\0\1\111\1\0"+
    "\16\10\1\u018f\12\10\1\0\1\10\2\0\2\10\1\107"+
    "\2\0\1\107\1\0\1\10\1\0\1\10\1\0\2\10"+
    "\1\110\1\0\2\10\4\0\3\10\1\0\1\111\1\0"+
    "\10\10\1\122\20\10\1\0\1\10\2\0\2\10\1\107"+
    "\2\0\1\107\1\0\1\10\1\0\1\10\1\0\2\10"+
    "\1\110\1\0\2\10\4\0\3\10\1\0\1\111\1\0"+
    "\22\10\1\u0187\6\10\1\0\1\10\2\0\2\10\1\107"+
    "\2\0\1\107\1\0\1\10\1\0\1\10\1\0\2\10"+
    "\1\110\1\0\2\10\4\0\3\10\1\0\1\111\1\0"+
    "\6\10\1\u0190\22\10\1\0\1\10\2\0\1\10\1\113"+
    "\1\u018a\2\113\1\u018a\1\113\1\u0143\17\113\1\0\1\113"+
    "\1\u017f\40\113\2\u018a\1\113\1\u018a\1\113\1\u0143\17\113"+
    "\1\0\1\113\1\u017f\37\113\1\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\23\10\1\u0191"+
    "\5\10\1\0\1\10\2\0\2\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\5\10\1\u0178"+
    "\23\10\1\0\1\10\2\0\2\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\15\10\1\122"+
    "\13\10\1\0\1\10\2\0\2\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\25\10\1\u0192"+
    "\3\10\1\0\1\10\2\0\2\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\16\10\1\u0193"+
    "\12\10\1\0\1\10\2\0\2\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\21\10\1\122"+
    "\7\10\1\0\1\10\2\0\2\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\10\10\1\u0194"+
    "\20\10\1\0\1\10\2\0\2\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\20\10\1\u0195"+
    "\10\10\1\0\1\10\2\0\2\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\5\10\1\u0196"+
    "\23\10\1\0\1\10\2\0\2\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\14\10\1\122"+
    "\14\10\1\0\1\10\2\0\2\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\1\10\1\u0197"+
    "\27\10\1\0\1\10\2\0\2\10\1\107\2\0\1\107"+
    "\1\0\1\10\1\0\1\10\1\0\2\10\1\110\1\0"+
    "\2\10\4\0\3\10\1\0\1\111\1\0\4\10\1\u0198"+
    "\24\10\1\0\1\10\2\0\1\10";

  private static int [] zzUnpacktrans() {
    int [] result = new int[20832];
    int offset = 0;
    offset = zzUnpacktrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpacktrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state {@code aState}
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\7\0\4\1\1\11\2\1\1\11\1\1\2\11\24\1"+
    "\1\11\1\1\1\11\6\1\3\11\6\1\2\11\1\1"+
    "\1\11\4\1\1\11\2\1\1\11\1\1\1\11\4\0"+
    "\2\1\1\0\1\11\1\1\1\11\1\0\2\1\1\0"+
    "\37\1\1\0\1\1\2\0\5\1\1\0\17\1\1\0"+
    "\1\1\6\0\1\11\3\0\40\1\1\0\4\1\1\0"+
    "\2\1\1\0\12\1\2\0\2\1\2\0\3\1\6\0"+
    "\36\1\1\0\4\1\2\0\1\1\2\0\2\1\2\0"+
    "\3\1\1\0\6\1\3\0\11\1\1\0\4\1\1\0"+
    "\5\1\2\0\2\1\2\0\25\1\1\11\1\1\1\0"+
    "\3\1\2\0\1\1\1\0\2\1\1\0\7\1\2\0"+
    "\4\1\1\0\3\1\1\11\16\1\1\0\15\1\2\0"+
    "\31\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[408];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** Number of newlines encountered up to the start of the matched text. */
  @SuppressWarnings("unused")
  private int yyline;

  /** Number of characters from the last newline up to the start of the matched text. */
  @SuppressWarnings("unused")
  protected int yycolumn;

  /** Number of characters up to the start of the matched text. */
  @SuppressWarnings("unused")
  private long yychar;

  /** Whether the scanner is currently at the beginning of a line. */
  @SuppressWarnings("unused")
  private boolean zzAtBOL = true;

  /** Whether the user-EOF-code has already been executed. */
  @SuppressWarnings("unused")
  private boolean zzEOFDone;

  /* user code: */
  public D2FlexLexer() {
    this((java.io.Reader)null);
  }

  private StringBuilder blockStringToken;

  private IElementType startBlockString() {
    yybegin(BLOCK_STRING_LANG_STATE);
    blockStringToken = new StringBuilder(yytext()).reverse();
    return BLOCK_STRING_OPEN;
  }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public D2FlexLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** Returns the maximum size of the scanner buffer, which limits the size of tokens. */
  private int zzMaxBufferLen() {
    return Integer.MAX_VALUE;
  }

  /**  Whether the scanner buffer can grow to accommodate a larger token. */
  private boolean zzCanGrow() {
    return true;
  }

  /**
   * Translates raw input code points to DFA table row
   */
  private static int zzCMap(int input) {
    int offset = input & 255;
    return offset == input ? ZZ_CMAP_BLOCKS[offset] : ZZ_CMAP_BLOCKS[ZZ_CMAP_TOP[input >> 8] | offset];
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      {@code false}, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position {@code pos} from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occurred while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException
  {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMap(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            switch (zzLexicalState) {
            case BLOCK_STRING_LANG_STATE: {
              yybegin(YYINITIAL); return BAD_CHARACTER;
            }  // fall though
            case 409: break;
            case BLOCK_STRING_BODY_STATE: {
              yybegin(YYINITIAL); return BAD_CHARACTER;
            }  // fall though
            case 410: break;
            default:
        return null;
        }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1:
            { return ID;
            }
          // fall through
          case 42: break;
          case 2:
            { return WHITE_SPACE;
            }
          // fall through
          case 43: break;
          case 3:
            { return STRING;
            }
          // fall through
          case 44: break;
          case 4:
            { return COMMENT;
            }
          // fall through
          case 45: break;
          case 5:
            { return BAD_CHARACTER;
            }
          // fall through
          case 46: break;
          case 6:
            { return DOT;
            }
          // fall through
          case 47: break;
          case 7:
            { yybegin(LABEL_STATE); return COLON;
            }
          // fall through
          case 48: break;
          case 8:
            { return SEMICOLON;
            }
          // fall through
          case 49: break;
          case 9:
            { return PARENT_SHAPE_REF;
            }
          // fall through
          case 50: break;
          case 10:
            { return LBRACE;
            }
          // fall through
          case 51: break;
          case 11:
            { return startBlockString();
            }
          // fall through
          case 52: break;
          case 12:
            { return RBRACE;
            }
          // fall through
          case 53: break;
          case 13:
            { return UNQUOTED_STRING;
            }
          // fall through
          case 54: break;
          case 14:
            { yybegin(YYINITIAL); return WHITE_SPACE;
            }
          // fall through
          case 55: break;
          case 15:
            { yybegin(YYINITIAL); return LBRACE;
            }
          // fall through
          case 56: break;
          case 16:
            { yybegin(YYINITIAL); return RBRACE;
            }
          // fall through
          case 57: break;
          case 17:
            { yybegin(PROPERTY_VALUE_STATE); return COLON;
            }
          // fall through
          case 58: break;
          case 18:
            { return INT;
            }
          // fall through
          case 59: break;
          case 19:
            { return COLON;
            }
          // fall through
          case 60: break;
          case 20:
            { yybegin(YYINITIAL); return SEMICOLON;
            }
          // fall through
          case 61: break;
          case 21:
            { yybegin(ARRAY_STATE); return LBRACKET;
            }
          // fall through
          case 62: break;
          case 22:
            { return RBRACKET;
            }
          // fall through
          case 63: break;
          case 23:
            { yybegin(BLOCK_STRING_BODY_STATE); return BLOCK_STRING_LANG;
            }
          // fall through
          case 64: break;
          case 24:
            { yypushback(yylength());
        yybegin(BLOCK_STRING_BODY_STATE);
            }
          // fall through
          case 65: break;
          case 25:
            { if (blockStringToken == null) {
				yybegin(YYINITIAL);
				blockStringToken = null;
				return BLOCK_STRING_CLOSE;
		}
		else if (StringUtilRt.endsWith(yytext(), blockStringToken)) {
				// push back to register on next step as a BLOCK_STRING_CLOSE token,
				// (we neeed it to easily implement embededed language, brace matcher and so on)
				yypushback(blockStringToken.length());
				blockStringToken = null;
				return BLOCK_STRING_BODY;
		}
            }
          // fall through
          case 66: break;
          case 26:
            { return LBRACKET;
            }
          // fall through
          case 67: break;
          case 27:
            { yybegin(YYINITIAL); return RBRACKET;
            }
          // fall through
          case 68: break;
          case 28:
            { return DOUBLE_HYPHEN_ARROW;
            }
          // fall through
          case 69: break;
          case 29:
            { return ARROW;
            }
          // fall through
          case 70: break;
          case 30:
            { yybegin(PROPERTY_VALUE_BEGIN_STATE); return STYLE_KEYWORDS;
            }
          // fall through
          case 71: break;
          case 31:
            { return REVERSE_ARROW;
            }
          // fall through
          case 72: break;
          case 32:
            { return DOUBLE_ARROW;
            }
          // fall through
          case 73: break;
          case 33:
            { yybegin(PROPERTY_VALUE_BEGIN_STATE); return SIMPLE_RESERVED_KEYWORDS;
            }
          // fall through
          case 74: break;
          case 34:
            { return FLOAT;
            }
          // fall through
          case 75: break;
          case 35:
            { return COMPOSITE_RESERVED_KEYWORDS;
            }
          // fall through
          case 76: break;
          case 36:
            { return TRUE;
            }
          // fall through
          case 77: break;
          case 37:
            { return STYLE_KEYWORD;
            }
          // fall through
          case 78: break;
          case 38:
            { return COLOR;
            }
          // fall through
          case 79: break;
          case 39:
            { return FALSE;
            }
          // fall through
          case 80: break;
          case 40:
            { yybegin(PROPERTY_VALUE_BEGIN_STATE); return CONTAINER_LESS_KEYWORDS;
            }
          // fall through
          case 81: break;
          case 41:
            { return RESERVED_KEYWORD_HOLDERS;
            }
          // fall through
          case 82: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
